// Generated by CoffeeScript 1.6.3
(function() {
  var converters, emoji, escape, fs, html2markdown, htmlMd, idx, marked, msg, msgs, res, results, sHTML, toMarkdown, _c, _i, _j, _len, _len1, _mda, _mdb, _mdc;

  fs = require('fs');

  msgs = require(process.argv[2] || "./messages.json");

  marked = require('marked');

  emoji = require("emoji-images");

  escape = require('escape-html');

  toMarkdown = require("to-markdown");

  htmlMd = require("html-md");

  html2markdown = require("html2markdown");

  results = [];

  converters = [
    {
      filter: 'div',
      replacement: function(ihtml, node) {
        if (node.className === "wmquot") {
          return "\n\n> " + ihtml + "\n\n";
        }
        return ihtml;
      }
    }
  ];

  for (idx = _i = 0, _len = msgs.length; _i < _len; idx = ++_i) {
    msg = msgs[idx];
    _c = emoji(msg, 'node_modules/emoji-images/pngs', 30);
    results.push({
      org: _c,
      toMarkdown: [
        (_mda = toMarkdown(_c, {
          gfm: false,
          converters: converters
        })), marked(_mda)
      ],
      htmlMd: [(_mdb = htmlMd(_c)), marked(_mdb)],
      html2markdown: [(_mdc = html2markdown(_c)), marked(_mdc)]
    });
  }

  sHTML = "<!doctype html>\n<html>\n	<head>\n		<meta charset=\"utf-8\">\n		<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n		<title>Compare HTML 2 Markdown</title>\n		<meta name=\"description\" content=\"\">\n		<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n		<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\">\n		<style>\n			.wmquot, blockquote{\n				border-left: 5px solid blue;\n				font-size: 17.5px;\n				margin: 0 0 20px;\n				padding: 10px 20px;\n				font-size: 14px;\n			}\n			.wmquot{\n				border-left: 5px solid red;\n			}\n			code{\n				overflow: hidden;\n				white-space: pre-wrap;\n				display:block;\n			}\n		</style>\n	</head>\n	<body>\n		<table class=\"table table-bordered table-hover\">\n			<tr>\n				<th width=\"4%\"></th>\n				<th width=\"24%\">Original</th>\n				<th width=\"24%\"><a href=\"https://github.com/domchristie/to-markdown\">to-markdown</a></th>\n				<th width=\"24%\"><a href=\"https://www.npmjs.com/package/html-md\">html-md</a></th>\n				<th width=\"24%\"><a href=\"https://www.npmjs.com/package/html2markdown\">html2markdown</a></th>\n			</tr>";

  for (idx = _j = 0, _len1 = results.length; _j < _len1; idx = ++_j) {
    res = results[idx];
    sHTML += "<tr>";
    sHTML += "<td>" + (idx + 1) + "</td>";
    sHTML += "<td>" + res.org + "</td>";
    sHTML += "<td>" + res.toMarkdown[1] + "</td>";
    sHTML += "<td>" + res.htmlMd[1] + "</td>";
    sHTML += "<td>" + res.html2markdown[1] + "</td>";
    sHTML += "</tr>";
    sHTML += "<tr>";
    sHTML += "<td>" + (idx + 1) + " SOURCE</td>";
    sHTML += "<td><code id=\"org" + idx + "\" data-idx=\"" + idx + "\" class=\"org\">" + (escape(res.org)) + "</code></td>";
    sHTML += "<td class=\"md\"><code id=\"tm" + idx + "\" class=\"tm\">" + (escape(res.toMarkdown[0])) + "</code></td>";
    sHTML += "<td class=\"md\"><code>" + (escape(res.htmlMd[0])) + "</code></td>";
    sHTML += "<td class=\"md\"><code>" + (escape(res.html2markdown[0])) + "</code></td>";
    sHTML += "</tr>";
  }

  sHTML += "	</table>\n</body>\n</html>";

  fs.writeFileSync("./out.html", sHTML);

}).call(this);
